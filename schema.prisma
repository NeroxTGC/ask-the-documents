datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [pgvector(map: "vector")]
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

model User {
  id    Int     @id @default(autoincrement())
  email String?
  chats Chat[]  // Relación con los chats
}

model Document {
  id          String        @id @default(uuid())
  title       String
  url         String       @unique
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  sections    Section[]
}

model Section {
  id          String    @id @default(uuid())
  content     String
  embedding   Unsupported("vector(1536)")
  orderIndex  Int       // Para mantener el orden de las secciones
  document    Document  @relation(fields: [documentId], references: [id], onDelete: Cascade)
  documentId  String
  
  @@unique([documentId, orderIndex])
}

model Chat {
  id          String    @id @default(uuid())
  title       String    // Título o resumen del chat
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int       // Chat pertenece a un usuario
  messages    Message[] // Relación con mensajes
}

model Message {
  id                String    @id @default(uuid())
  content           String    // Contenido del mensaje
  reasoningContent  String?   // Contenido de razonamiento (COT) para modelo DeepSeek-R1
  role              String    // "user", "assistant", "system"
  modelType         String    // "deepseek-v3", "deepseek-r1"
  useRag            Boolean   @default(false) // Indica si se usa RAG o no
  embedding         Unsupported("vector(1536)")? // Embedding opcional para funcionalidad RAG
  createdAt         DateTime  @default(now())
  chat              Chat      @relation(fields: [chatId], references: [id], onDelete: Cascade)
  chatId            String    // Mensaje pertenece a un chat
  
  @@index([chatId]) // Índice para mejorar rendimiento
}
